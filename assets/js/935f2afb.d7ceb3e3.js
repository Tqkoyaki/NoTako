"use strict";(self.webpackChunknotako=self.webpackChunknotako||[]).push([[53],{1109:t=>{t.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"subjectSidebar":[{"type":"link","label":"Tutorial Intro","href":"/NoTako/docs/","docId":"intro"},{"type":"link","label":"Computer Science","href":"/NoTako/docs/turing-tako/","docId":"turing-tako/turing"}],"turingSidebar":[{"type":"link","label":"Computer Science","href":"/NoTako/docs/turing-tako/","docId":"turing-tako/turing"},{"type":"category","label":"Python Basics","items":[{"type":"link","label":"Introduction","href":"/NoTako/docs/turing-tako/python-basics/page-1","docId":"turing-tako/python-basics/page-1"},{"type":"link","label":"Data","href":"/NoTako/docs/turing-tako/python-basics/page-2","docId":"turing-tako/python-basics/page-2"},{"type":"link","label":"Sequences","href":"/NoTako/docs/turing-tako/python-basics/page-3","docId":"turing-tako/python-basics/page-3"},{"type":"link","label":"Control Flow","href":"/NoTako/docs/turing-tako/python-basics/page-4","docId":"turing-tako/python-basics/page-4"},{"type":"link","label":"Data Handling","href":"/NoTako/docs/turing-tako/python-basics/page-5","docId":"turing-tako/python-basics/page-5"},{"type":"link","label":"Objects","href":"/NoTako/docs/turing-tako/python-basics/page-6","docId":"turing-tako/python-basics/page-6"},{"type":"link","label":"Networking","href":"/NoTako/docs/turing-tako/python-basics/page-7","docId":"turing-tako/python-basics/page-7"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Intro to Computer Science","items":[{"type":"link","label":"Introduction to Computation","href":"/NoTako/docs/turing-tako/intro-to-cs/page-1","docId":"turing-tako/intro-to-cs/page-1"},{"type":"link","label":"Branching and Iteration","href":"/NoTako/docs/turing-tako/intro-to-cs/page-2","docId":"turing-tako/intro-to-cs/page-2"},{"type":"link","label":"Strings and Algorithms","href":"/NoTako/docs/turing-tako/intro-to-cs/page-3","docId":"turing-tako/intro-to-cs/page-3"},{"type":"link","label":"Functions","href":"/NoTako/docs/turing-tako/intro-to-cs/page-4","docId":"turing-tako/intro-to-cs/page-4"}],"collapsed":true,"collapsible":true}]},"docs":{"intro":{"id":"intro","title":"Tutorial Intro","description":"Let\'s discover Docusaurus in less than 5 minutes.","sidebar":"subjectSidebar"},"turing-tako/intro-to-cs/page-1":{"id":"turing-tako/intro-to-cs/page-1","title":"Introduction to Computation","description":"Computers are powerful tools that have allowed us to do things that were previously impossible but they can only do what we tell them to do. There are two types of knowledge, declarative and imperative. Declarative knowledge is a statement of facts like square root of a number x is y such that y \\\\* y = x. However a computer cannot understand this statement, it can only understand instructions (how-to) which is called imperative knowledge. You can give a computer a list of instructions to find the square root of a number, it will not understand the results but it will be able to find the square root of a number with the right instructions.","sidebar":"turingSidebar"},"turing-tako/intro-to-cs/page-2":{"id":"turing-tako/intro-to-cs/page-2","title":"Branching and Iteration","description":"A computer executes a program line by line from top to bottom. However, there are times when we want to execute a block of code multiple times or skip a block of code. This is where branching and iteration come in.","sidebar":"turingSidebar"},"turing-tako/intro-to-cs/page-3":{"id":"turing-tako/intro-to-cs/page-3","title":"Strings and Algorithms","description":"","sidebar":"turingSidebar"},"turing-tako/intro-to-cs/page-4":{"id":"turing-tako/intro-to-cs/page-4","title":"Functions","description":"","sidebar":"turingSidebar"},"turing-tako/python-basics/page-1":{"id":"turing-tako/python-basics/page-1","title":"Introduction","description":"Programming is the process of implementing logic to create a program which usually solves a problem. It is a useful skill because we are able to automate repetitive and mundane tasks and focus on the more important tasks which require human intelligence.","sidebar":"turingSidebar"},"turing-tako/python-basics/page-2":{"id":"turing-tako/python-basics/page-2","title":"Data","description":"A fundamental aspect of programming is working with data and manipulating it to produce a desired result. In this section, we will look at the different types of data that can be used in a program and how to manipulate it.","sidebar":"turingSidebar"},"turing-tako/python-basics/page-3":{"id":"turing-tako/python-basics/page-3","title":"Sequences","description":"Sometimes you want to store a list of values that are related to each other and creating a variable for each one would be excessive, inefficient, and will never be flexible for many needs. This is why we have data structures to organize more complex data and the first example of a data structure is a list. A list holds a sequence of values.","sidebar":"turingSidebar"},"turing-tako/python-basics/page-4":{"id":"turing-tako/python-basics/page-4","title":"Control Flow","description":"Sometimes running a program in order from top to bottom is not the best way to go about writing a program. We want to be able to decide what code runs under specific conditions, we want to be able to repeat code so that we don\'t have to write it over and over again. All of these issues are solved by implementing control flow. Control flow are different ways we can control how our program runs allowing us to deviate from the normal top to bottom execution.","sidebar":"turingSidebar"},"turing-tako/python-basics/page-5":{"id":"turing-tako/python-basics/page-5","title":"Data Handling","description":"A big part of programming is dealing with data and data can get very complex very quickly. There are many different ways to organize and deal with data. So far lists are the only data structure we have seen but there are many more and they all have their own strengths and weaknesses.","sidebar":"turingSidebar"},"turing-tako/python-basics/page-6":{"id":"turing-tako/python-basics/page-6","title":"Objects","description":"So far there have been four basic programming patterns used to design programs. They are sequential code, conditional code (if statement), repetitive code (loops), and the use of store and reuse (functions). For highly complex code, these patterns are not enough. This is where object orientated programming comes in.","sidebar":"turingSidebar"},"turing-tako/python-basics/page-7":{"id":"turing-tako/python-basics/page-7","title":"Networking","description":"There is a limit to how much data we can get on our own and there is lots of data that can be found online for programs to use. Data can come in many forms and can be used for many different purposes.","sidebar":"turingSidebar"},"turing-tako/turing":{"id":"turing-tako/turing","title":"Computer Science","description":"Hello World","sidebar":"turingSidebar"}}}')}}]);